From 1a49ae87690e0d43c1ead892cfabafcac81b3542 Mon Sep 17 00:00:00 2001
Message-Id: <1a49ae87690e0d43c1ead892cfabafcac81b3542.1670707091.git.lorenzo@kernel.org>
In-Reply-To: <073e148f3b2556ef02b331bbf636105733da8480.1670707091.git.lorenzo@kernel.org>
References: <073e148f3b2556ef02b331bbf636105733da8480.1670707091.git.lorenzo@kernel.org>
From: Sujuan Chen <sujuan.chen@mediatek.com>
Date: Tue, 29 Nov 2022 11:58:43 +0100
Subject: [PATCH net-next 2/5] wifi: mt76: dma: add reset to mt76_dma_wed_setup
 signature

Export mt76_dma_wed_setup routine. This is a preliminary patch to
introduce proper wed reset support.

Co-developed-by: Lorenzo Bianconi <lorenzo@kernel.org>
Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
Signed-off-by: Sujuan Chen <sujuan.chen@mediatek.com>
---
 dma.c | 16 ++++++++++------
 dma.h |  1 +
 2 files changed, 11 insertions(+), 6 deletions(-)

--- a/dma.c
+++ b/dma.c
@@ -609,14 +609,17 @@ mt76_dma_rx_fill(struct mt76_dev *dev, s
 	return frames;
 }
 
-static int
-mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q)
+int mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset)
 {
 #ifdef CONFIG_NET_MEDIATEK_SOC_WED
 	struct mtk_wed_device *wed = &dev->mmio.wed;
 	int ret, type, ring;
-	u8 flags = q->flags;
+	u8 flags;
+
+	if (!q || !q->ndesc)
+		return -EINVAL;
 
+	flags = q->flags;
 	if (!mtk_wed_device_active(wed))
 		q->flags &= ~MT_QFLAG_WED;
 
@@ -628,7 +631,7 @@ mt76_dma_wed_setup(struct mt76_dev *dev,
 
 	switch (type) {
 	case MT76_WED_Q_TX:
-		ret = mtk_wed_device_tx_ring_setup(wed, ring, q->regs, false);
+		ret = mtk_wed_device_tx_ring_setup(wed, ring, q->regs, reset);
 		if (!ret)
 			q->wed_regs = wed->tx_ring[ring].reg_base;
 		break;
@@ -644,7 +647,7 @@ mt76_dma_wed_setup(struct mt76_dev *dev,
 			q->wed_regs = wed->txfree_ring.reg_base;
 		break;
 	case MT76_WED_Q_RX:
-		ret = mtk_wed_device_rx_ring_setup(wed, ring, q->regs, false);
+		ret = mtk_wed_device_rx_ring_setup(wed, ring, q->regs, reset);
 		if (!ret)
 			q->wed_regs = wed->rx_ring[ring].reg_base;
 		break;
@@ -657,6 +660,7 @@ mt76_dma_wed_setup(struct mt76_dev *dev,
 	return 0;
 #endif
 }
+EXPORT_SYMBOL_GPL(mt76_dma_wed_setup);
 
 static int
 mt76_dma_alloc_queue(struct mt76_dev *dev, struct mt76_queue *q,
@@ -683,7 +687,7 @@ mt76_dma_alloc_queue(struct mt76_dev *de
 	if (!q->entry)
 		return -ENOMEM;
 
-	ret = mt76_dma_wed_setup(dev, q);
+	ret = mt76_dma_wed_setup(dev, q, false);
 	if (ret)
 		return ret;
 
--- a/dma.h
+++ b/dma.h
@@ -56,5 +56,6 @@ enum mt76_mcu_evt_type {
 int mt76_dma_rx_poll(struct napi_struct *napi, int budget);
 void mt76_dma_attach(struct mt76_dev *dev);
 void mt76_dma_cleanup(struct mt76_dev *dev);
+int mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset);
 
 #endif
